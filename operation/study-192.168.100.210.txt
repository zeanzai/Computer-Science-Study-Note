1. ip：192.168.100.210
2. root：root1003
3. 包放置地址：/opt/package
4. 软件安装地址： /usr/setup
5. 安装jdk1.8.0_111
- 解压
	tar zxf /opt/package/jdk-8u111-linux-x64.tar.gz -C /usr/setup
- 设置环境变量
	vi /etc/profile 添加以下内容：
	export JAVA_HOME=/usr/setup/jdk1.8.0_111
	export JRE_HOME=$JAVA_HOME/jre
	export CLASSPATH=./:$JAVA_HOME/lib:$JAVA_HOME/jre/lib
	export PATH=$PATH:$JAVA_HOME/bin

- 使环境变量生效
	source /etc/profile

- 重启
	reboot

6. 安装Tomcat8.5
- 解压文件
	$ tar zxf apache-tomcat-8.5.32.tar.gz -C /usr/setup/

- 创建用户，并将home目录放置到安装目录下面
	useradd -m -U -d /usr/setup/apache-tomcat-8.5.32 -s /bin/false tomcat

- 创建快捷方式
	ln -s /usr/setup/apache-tomcat-* /usr/setup/latestTomcat

- 改变文件所属组和用户为Tomcat
	chown -R tomcat: /usr/setup/apache-tomcat-*
	chown -R tomcat: /usr/setup/latestTomcat

- 可执行状态
	chmod +x /usr/setup/latestTomcat/bin/*.sh

- 创建/etc/systemd/system/tomcat.service文件
	```添加以下内容
	[Unit]
	Description=Tomcat 8.5 servlet container
	After=network.target

	[Service]
	Type=forking

	User=tomcat
	Group=tomcat

	Environment="JAVA_HOME=/usr/setup/jdk1.8.0_111"

	Environment="CATALINA_BASE=/usr/setup/latestTomcat"
	Environment="CATALINA_HOME=/usr/setup/latestTomcat"
	Environment="CATALINA_PID=/usr/setup/latestTomcat/temp/tomcat.pid"

	ExecStart=/usr/setup/latestTomcat/bin/startup.sh
	ExecStop=/usr/setup/latestTomcat/bin/shutdown.sh

	[Install]
	WantedBy=multi-user.target
	```

- 让创建的服务生效，然后启动Tomcat
	systemctl daemon-reload
	systemctl start tomcat
	systemctl status tomcat

- 加入 automatically started at boot time
	systemctl enable tomcat

- 开放端口
	firewall-cmd --zone=public --permanent --add-port=8080/tcp
	firewall-cmd --zone=public --permanent --add-port=8005/tcp
	firewall-cmd --zone=public --permanent --add-port=8009/tcp
	firewall-cmd --reload

- 修改配置文件
	a. vi /usr/setup/latestTomcat/conf/tomcat-users.xml
	```添加以下内容
	<role rolename="manager-script"/>
	<user username="tomcat" password="tomcat" roles="manager-script"/>
	```
	b. vi /usr/setup/latestTomcat/webapps/manager/META-INF/context.xml
<Context antiResourceLocking="false" privileged="true" >
	<!--  <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" /> --> 把这一行注释掉
	<Manager sessionAttributeValueClassNameFilter="java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap"/>
</Context>



```

1. 参考： https://github.com/zeanzai/Computer-Science-Study-Note/blob/master/operation/install-tomcat8.md
2. Tomcat启动慢的解决办法
第一种 :
通过修改Tomcat启动文件 -Djava.security.egd=file:/dev/urandom 通过修改JRE中的java.security文件 securerandom.source=file:/dev/urandom

第二种(推荐):
yum -y install rng-tools
##启动熵服务
systemctl start rngd
systemctl restart rngd

```
7. 安装redis4.0.6【没有设置自启动】
- 检查编译工具是否安装
	rpm -qa | grep gcc-c++
	如果没有安装，执行： yum -y install gcc-c++
- 解压
	tar zxf redis-4.0.6.tar.gz
- 进入安装目录，并进行编译
	make
- 创建安装目录
	mkdir /usr/setup/redis4.0.6_singleton
- 安装
	make install PREFIX=/usr/setup/redis4.0.6_singleton
- 测试
	- 进入安装目录，启动服务端
		cd /usr/setup/redis4.0.6_singleton/bin
		./redis-server
	- 开启另一个终端，进入安装目录，启动客户端
		cd /usr/setup/redis4.0.6_singleton/bin
		./redis-cli

```
1. 参考: https://github.com/zeanzai/Computer-Science-Study-Note/blob/master/operation/centos7-redis-cluster.md
2. 基本命令
ping
set a 123
get a
quit
```

8. 安装MySQL5.7
- 检查安装环境
	rpm -qa|grep mariadb
	rpm -e mariadb-libs-* --nodeps
	rpm -qa|grep mariadb
- 解压
	tar xvf mysql-5.7.16-1.el7.x86_64.rpm-bundle.tar
	mkdir mysql5.7.16
	mv mysql-community-* ./mysql5.7.16/

- 安装
	rpm -ivh mysql-community-common-5.7.16-1.el7.x86_64.rpm
	rpm -ivh mysql-community-libs-5.7.16-1.el7.x86_64.rpm
	rpm -ivh mysql-community-client-5.7.16-1.el7.x86_64.rpm
	rpm -ivh mysql-community-server-5.7.16-1.el7.x86_64.rpm

- 初始化
	mysqld --initialize --user=mysql
	cat /var/log/mysqld.log
	systemctl status mysqld
	systemctl start mysqld
	systemctl status mysqld

- 分配权限
	mysql -uroot -p
	ALTER USER 'root'@'localhost' IDENTIFIED BY 'root1003@study&*(';

	grant all on *.* to 'root'@'%' identified by 'root1003@study&*(';
	flush privileges;

- 开放端口
	firewall-cmd --zone=public --add-port=3306/tcp --permanent
	firewall-cmd --reload
```
参考：
https://github.com/zeanzai/Computer-Science-Study-Note/blob/master/operation/centos7-mysql.md
```

9. 安装git、jekyll
- 查看yum库中的版本：
	yum info git
- 查看是否安装
	git --version
- 安装依赖包
	yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker
- 查看是否安装
	git --version
- 卸载旧版本
	yum remove git
- 下载 https://github.com/git/git/releases
- 上传到制定目录
- 解压
	tar zxf git-2.18.0.tar.gz
- 安装
	make prefix=/usr/setup/git_2.18.0 all
	make prefix=/usr/setup/git_2.18.0 install
- 配置环境变量
	vi /etc/profile
	export GIT_HOME=/usr/setup/git_2.18.0
	export PATH=$PATH:$GIT_HOME/bin
	source /etc/profile
- 查看是否安装
	git --version
- 配置
	git config --global user.name "zeanzai"
	git config --global user.email "438123371@qq.com"

----------- 安装jekyll
- 检查ruby是否安装
	ruby -v
- 更新安装源
	yum -y update
- 安装RVM
	gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
	curl -sSL https://get.rvm.io | bash -s stable // 此步骤时间有点长
	source /etc/profile.d/rvm.sh
	rvm -v
		输出：rvm 1.29.4 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
- 安装最新的稳定版本
	rvm install ruby // 此步骤时间有点长
- 测试是否安装
	ruby -v
		输出：ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux]
	gem -v
		输出：2.7.7

- 安装jekyll和bundle
	gem install jekyll bundle jekyll-paginate
- 测试jekyll是否安装
	bundle -v
		输出： Bundler version 1.16.2
	jekyll -v
		输出： jekyll 3.8.3
- 创建目录
	mkdir /home/resource/open
- 克隆项目
	git clone https://github.com/zeanzai/zeanzai.github.io.git
- 配置Nginx

- 创建脚本
mkdir /opt/script
cd /opt/script
vi jekyll.sh
#!/bin/sh
. /etc/profile
. ~/.bash_profile
echo 'start-----------------------------------------------'
date "+%Y-%m-%d %H:%M:%S"

echo 'open the dir...'
cd /home/resource/open/zeanzai.github.io

echo 'excute git pull...'
git pull

echo 'excute jekyll build...'
jekyll build

echo 'reload nginx...'
systemctl reload nginx

echo 'end -----------------------------------------------'

chmod +x jekyll.sh

- 查看定时器是否启动
systemctl status crond

- 查看定时器是否开机自启
systemctl is-enabled crond

- 设置定时器
crontab -e
40 12 * * * /bin/sh /opt/script/jekyll.sh >> /home/jekyll.log 2>&1

- 查看执行日志
tail -f /var/log/cron


date "+%Y-%m-%d %H:%M:%S"



/usr/local/rvm/gems/ruby-2.5.1/bin:
/usr/local/rvm/gems/ruby-2.5.1@global/bin:
/usr/local/rvm/rubies/ruby-2.5.1/bin:
/usr/local/sbin:
/usr/local/bin:
/usr/sbin:
/usr/bin:
/usr/local/rvm/bin:
/usr/setup/git_2.18.0/bin:
/root/bin

source /usr/local/rvm/rubies/ruby-2.5.1/lib/ruby/gems/2.5.0/environment
